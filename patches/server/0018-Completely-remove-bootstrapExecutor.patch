From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: foss-mc <69294560+foss-mc@users.noreply.github.com>
Date: Thu, 1 Jul 2021 12:26:15 +0000
Subject: [PATCH] Completely remove bootstrapExecutor

Original code by PatinaMC, licensed under GNU General Public License v3.0
You can find the original code on https://github.com/PatinaMC/Patina

diff --git a/src/main/java/net/minecraft/Util.java b/src/main/java/net/minecraft/Util.java
index 34e571b702684673b89103176838dc246ff9b24d..f11791bfdf7448ef0bbd56e8fd30b8ad840a1bbb 100644
--- a/src/main/java/net/minecraft/Util.java
+++ b/src/main/java/net/minecraft/Util.java
@@ -73,7 +73,7 @@ public class Util {
     private static final int DEFAULT_MAX_THREADS = 255;
     private static final String MAX_THREADS_SYSTEM_PROPERTY = "max.bg.threads";
     private static final AtomicInteger WORKER_COUNT = new AtomicInteger(1);
-    private static final ExecutorService BOOTSTRAP_EXECUTOR = makeExecutor("Bootstrap", -2); // Paper - add -2 priority
+    //private static final ExecutorService BOOTSTRAP_EXECUTOR = makeExecutor("Bootstrap", -2); // Paper - add -2 priority // Patina
     private static final ExecutorService BACKGROUND_EXECUTOR = makeExecutor("Main", -1); // Paper - add -1 priority
     // Paper start - don't submit BLOCKING PROFILE LOOKUPS to the world gen thread
     public static final ExecutorService PROFILE_EXECUTOR = Executors.newFixedThreadPool(2, new java.util.concurrent.ThreadFactory() {
@@ -192,9 +192,11 @@ public class Util {
         return 255;
     }
 
+    /* // Patina
     public static ExecutorService bootstrapExecutor() {
         return BOOTSTRAP_EXECUTOR;
     }
+    */
 
     public static ExecutorService backgroundExecutor() {
         return BACKGROUND_EXECUTOR;
diff --git a/src/main/java/net/minecraft/util/datafix/DataFixers.java b/src/main/java/net/minecraft/util/datafix/DataFixers.java
index b08d32bc80b4a65ebb980366a3e717c3b0e1bdab..a4ff80ec773e3a33238d444966054bd9a48a60d8 100644
--- a/src/main/java/net/minecraft/util/datafix/DataFixers.java
+++ b/src/main/java/net/minecraft/util/datafix/DataFixers.java
@@ -78,15 +78,15 @@ public class DataFixers {
 
     private static final BiFunction<Integer, Schema, Schema> SAME = Schema::new;
     private static final BiFunction<Integer, Schema, Schema> SAME_NAMESPACED = NamespacedSchema::new;
-    private static final DataFixer DATA_FIXER = DataFixers.createFixerUpper();
+    private static final DataFixer DATA_FIXER; // Patina
 
     public DataFixers() {}
 
-    private static DataFixer createFixerUpper() {
+    static { // Patina
         DataFixerBuilder datafixerbuilder = new DataFixerBuilder(SharedConstants.getCurrentVersion().getWorldVersion());
 
         DataFixers.addFixers(datafixerbuilder);
-        return datafixerbuilder.build(Util.bootstrapExecutor());
+        DATA_FIXER = datafixerbuilder.build(Util.backgroundExecutor()); // Patina
     }
 
     public static DataFixer getDataFixer() {
